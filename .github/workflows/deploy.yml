name: Deploy

on: workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Update Build number
      run: sed -i 's;\(Copyright.*\);\1 [Build ${{ github.run_number }} (${{ github.sha }})];g' index.html

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Build
      run: |
        npm ci
        npm run prod

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ secrets.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
    - name: Pulumi Up
      uses: pulumi/actions@v6
      id: pulumi
      with:
        command: up
        stack-name: pg94au/2BitBlaster/2BitBlaster
        work-dir: deployment
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

    - name: Invalidate Cache
      env:
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        distribution_id=${{ steps.pulumi.outputs.distributionId }}
        echo "Creating invalidation for $distribution_id"
        invalidation_id=$(aws cloudfront create-invalidation --distribution-id $distribution_id --paths "/" | jq --raw-output '.Invalidation.Id')
        echo "Waiting for invalidation for $invalidation_id"
        aws cloudfront wait invalidation-completed --distribution $distribution_id --id $invalidation_id